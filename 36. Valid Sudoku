class Solution(object):
    def isValidSudoku(self, board):
        """
        :type board: List[List[str]]
        :rtype: bool
        """
        return self.is_row_valid(board) and self.is_col_valid(board) and self.is_square_valid(board)
    
    
    def is_valid(self, line):
        return len([x for x in line if x!='.'])!=len(set([x for x in line if x!='.']))
  
    def is_square_valid(self, board):
        a=0
        for j in range(3):
            b=0
            for k in range(3):
                tmp=[]
                for q in range(3):
                    tmp += board[a+q][b:b+3]
                if self.is_valid(tmp):
                    return False
                b+=3
            a+=3
        return True
    

    
    def is_row_valid(self, board):
        for row in board:
            if self.is_valid(row):
                return False
        return True
            
    def is_col_valid(self, board):
        for col in zip(*board):
            if self.is_valid(col):
                return False
        return True
